name: release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

# jobs
jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  build:
    name: Build ${{ matrix.goos }}/${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ linux, windows, darwin ]
        goarch: [ 386, amd64 ]
    needs: release
    env:
      BIN_EXT: "" ## will be overridden if necessary
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Prepare dist
        run: mkdir -p ./dist

      - name: Setup extension
        if: ${{ matrix.goos }} == "windows"
        run: echo "BIN_EXT=.exe" >> $GITHUB_ENV

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: go build -o /out-bin mxplrr/cli/mxplrr

      - name: Upload Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_path: /out-bin
          asset_name: ${{ matrix.goos }}-mxplrr${{ env.BIN_EXT }}
          asset_content_type: application/octet-stream
